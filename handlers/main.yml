---

- name: enable and install sshd
  delegate_to: "{{ proxmox_host }}"
  remote_user: root
  shell: |
    set -euo pipefail
    if [[ "{{ proxmox_container_custom_script | quote }}" != "''" ]]; then
      echo {{ proxmox_container_custom_script | quote }} | pct exec {{ proxmox_vmid }} /bin/bash
    fi
    if [[ "{{ proxmox_ostemplate }}" = *debian* ]] || [[ "{{ proxmox_ostemplate }}" = *ubuntu* ]]; then
      echo "sleep {{ proxmox_container_sleep }} && apt-get install -y openssh-server" | pct exec {{ proxmox_vmid }} /bin/bash
      echo "perl -p -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && dpkg-reconfigure locales" | pct exec {{ proxmox_vmid }} /bin/bash
      echo "apt-get update && apt-get install -y python" | pct exec {{ proxmox_vmid }} /bin/bash
    else
      echo "echo LANG=en_US.UTF-8 >>/etc/locale.conf" | pct exec {{ proxmox_vmid }} /bin/bash
      echo "sleep {{ proxmox_container_sleep }} && yum install -y openssh-server" | pct exec {{ proxmox_vmid }} /bin/bash
    fi
    echo "sleep {{ proxmox_container_sleep }} && systemctl start sshd" | pct exec {{ proxmox_vmid }} /bin/bash
  args:
    executable: /bin/bash

- name: enable features for Docker in container
  delegate_to: "{{ proxmox_host }}"
  command: "pct set {{ proxmox_vmid }} --features nesting=1,keyctl=1"
  when: proxmox_enable_docker
  notify: restart container

- name: restart container
  proxmox:
    vmid: "{{ proxmox_vmid }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_host }}"
    state: restarted
    timeout: 90
  # no_log: true  # secret passwords

- name: wait for container to be up
  wait_for:
    delay: 10
    timeout: 60

- name: upgrade all packages to latest
  delegate_to: "{{ proxmox_ip|default(ansible_host) }}"
  yum:
    name: '*'
    state: latest
    update_cache: true
